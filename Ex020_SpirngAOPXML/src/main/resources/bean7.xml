<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 빈 등록 -->
	<bean id="employyService" class="kr.green.boot.service.EmployeeServiceImpl"/>
	
	<!-- AOP에 사용 할 빈 등록 -->
	<bean id="loggingAspectBean" class="kr.green.boot.aop.EmployeeAspect"/>
	<bean id="transectionAspect" class="kr.green.boot.aop.EmployeeTransectionAspect"/>
	<!-- AOP 설정 -->
	<aop:config>
		
		<!-- AOP 적용 : Aspect -->
		<aop:aspect ref="loggingAspectBean">
			<!-- PointCut(적용 될 위치) 정의 --><!-- Impl에 있는 모든 인수들, 리턴타입 상관없이 -->
			<aop:pointcut expression="execution(* kr.green.boot.service.EmployeeServiceImpl.*(..))" id="loggingOperation"/>
			<!-- AOP Advises-->
			<!-- 메서드 앞 뒤로 실행-->
			<aop:around method="aroundTimeLog" pointcut-ref="loggingOperation"/>
		</aop:aspect>
	<aop:aspect ref="transectionAspect">
		<aop:pointcut expression="execution(* kr.green.boot.service.EmployeeServiceImpl.*(..))" id="loggingOperation"/>
		<aop:after method="selectEmployeeId" pointcut-ref="transectionOperation"/>
	</aop:aspect>		
	</aop:config>

</beans>
